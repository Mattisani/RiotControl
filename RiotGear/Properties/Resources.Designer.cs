//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RiotGear.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RiotGear.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create table summoner_rating
        ///(
        ///        summoner_id integer not null,
        ///
        ///        map integer not null,
        ///        game_mode integer not null,
        ///
        ///        wins integer not null,
        ///        leaves integer not null,
        ///
        ///        tier integer,
        ///        rank integer,
        ///
        ///        league_points integer,
        ///
        ///        foreign key (summoner_id) references summoner(id)
        ///);
        ///
        ///create index summoner_rating_summoner_id_index on summoner_rating (summoner_id);
        ///
        ///create index summoner_rating_update_index on summoner_rating (summoner_id, map, game_mode [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateAndCopySummonerRatingSeason3 {
            get {
                return ResourceManager.GetString("CreateAndCopySummonerRatingSeason3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create table player
        ///(
        ///        game_id integer not null,
        ///        team_id integer not null,
        ///        summoner_id integer not null,
        ///
        ///        ping integer not null,
        ///        time_spent_in_queue integer not null,
        ///
        ///        premade_size integer not null,
        ///
        ///        experience_earned integer not null,
        ///        boosted_experience_earned integer not null,
        ///
        ///        ip_earned integer not null,
        ///        boosted_ip_earned integer not null,
        ///
        ///        summoner_level integer not null,
        ///
        ///        summoner_spell1 integer not null,
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateTablePlayer {
            get {
                return ResourceManager.GetString("CreateTablePlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create table rune_page
        ///(
        ///        id integer primary key,
        ///        summoner_id integer not null,
        ///        name text not null,
        ///        is_current_rune_page integer not null,
        ///        time_created integer not null,
        ///
        ///        foreign key(summoner_id) references summoner(id)
        ///);
        ///
        ///create index rune_page_summoner_id_index on rune_page (summoner_id);.
        /// </summary>
        internal static string CreateTableRunePage {
            get {
                return ResourceManager.GetString("CreateTableRunePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create table rune_slot
        ///(
        ///        rune_page_id integer not null,
        ///        rune_slot integer not null,
        ///        rune integer not null,
        ///
        ///        foreign key(rune_page_id) references rune_page(id) on delete cascade
        ///);
        ///
        ///create index rune_slot_rune_page_id_index on rune_slot (rune_page_id);.
        /// </summary>
        internal static string CreateTableRuneSlot {
            get {
                return ResourceManager.GetString("CreateTableRuneSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create table summoner
        ///(
        ///        id integer primary key,
        ///
        ///        region integer not null,
        ///
        ///        account_id integer not null,
        ///        summoner_id integer not null,
        ///
        ///        summoner_name text not null,
        ///        internal_name text not null,
        ///
        ///        summoner_level integer not null,
        ///        profile_icon integer not null,
        ///
        ///        has_been_updated integer not null,
        ///
        ///        update_automatically integer not null,
        ///
        ///        time_created integer not null,
        ///
        ///        time_updated integer not null
        ///);
        ///
        ///create index su [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateTableSummoner {
            get {
                return ResourceManager.GetString("CreateTableSummoner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create table summoner_ranked_statistics
        ///(
        ///        summoner_id integer not null,
        ///
        ///        season integer not null,
        ///
        ///        champion_id integer not null,
        ///
        ///        wins integer not null,
        ///        losses integer not null,
        ///
        ///        kills integer not null,
        ///        deaths integer not null,
        ///        assists integer not null,
        ///
        ///        minion_kills integer not null,
        ///
        ///        gold integer not null,
        ///
        ///        turrets_destroyed integer not null,
        ///
        ///        damage_dealt integer not null,
        ///        physical_damage_dealt integer [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateTableSummonerRankedStatistics {
            get {
                return ResourceManager.GetString("CreateTableSummonerRankedStatistics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create table summoner_rating
        ///(
        ///        summoner_id integer not null,
        ///
        ///        map integer not null,
        ///        game_mode integer not null,
        ///
        ///        wins integer not null,
        ///        losses integer not null,
        ///        leaves integer not null,
        ///
        ///        current_rating integer,
        ///        top_rating integer,
        ///
        ///        foreign key (summoner_id) references summoner(id)
        ///);
        ///
        ///create index summoner_rating_summoner_id_index on summoner_rating (summoner_id);
        ///
        ///create index summoner_rating_update_index on summoner_rating (summoner [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateTableSummonerRating {
            get {
                return ResourceManager.GetString("CreateTableSummonerRating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create table unknown_player
        ///(
        ///        team_id integer not null,
        ///        champion_id integer not null,
        ///        summoner_id integer not null,
        ///
        ///        foreign key (team_id) references team(id)
        ///);
        ///
        ///create index unknown_player_team_id_index on unknown_player (team_id);.
        /// </summary>
        internal static string CreateTableUnknownPlayer {
            get {
                return ResourceManager.GetString("CreateTableUnknownPlayer", resourceCulture);
            }
        }
    }
}
